This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2024-12-07T00:19:09.202Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
.eslintrc.json
.gitignore
next.config.ts
package.json
postcss.config.mjs
public/file.svg
public/globe.svg
public/next.svg
public/vercel.svg
public/window.svg
README.md
src/app/comics/nietzsche-becoming/page.tsx
src/app/comics/page.tsx
src/app/globals.css
src/app/layout.tsx
src/app/not-found.tsx
src/app/page.tsx
src/components/comic/ComicLayout.tsx
src/components/comic/ComicPage.tsx
src/components/comic/ComicPanel.tsx
src/components/comic/ComicQuote.tsx
src/components/comic/ComicViewer.tsx
src/components/shared/ComicLayout.tsx
src/components/shared/Layout.tsx
src/components/ui/card.tsx
src/lib/utils.ts
tailwind.config.ts
tsconfig.json

================================================================
Repository Files
================================================================

================
File: .eslintrc.json
================
{
  "extends": ["next/core-web-vitals", "next/typescript"]
}

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

================
File: next.config.ts
================
import type { NextConfig } from "next";

const nextConfig: NextConfig = {
  /* config options here */
};

export default nextConfig;

================
File: package.json
================
{
  "name": "philosophical-comics",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-slot": "^1.1.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "lucide-react": "^0.468.0",
    "next": "15.0.4",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "recharts": "^2.14.1",
    "tailwind-merge": "^2.5.5",
    "tailwindcss-animate": "^1.0.7",
    "framer-motion": "^10.16.4",
    "@heroicons/react": "^2.0.18"
  },
  "devDependencies": {
    "@shadcn/ui": "^0.0.4",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "cli": "^1.0.1",
    "eslint": "^8",
    "eslint-config-next": "15.0.4",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}

================
File: postcss.config.mjs
================
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;

================
File: public/file.svg
================
<svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>

================
File: public/globe.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>

================
File: public/next.svg
================
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>

================
File: public/vercel.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>

================
File: public/window.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>

================
File: README.md
================
This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.

================
File: src/app/comics/nietzsche-becoming/page.tsx
================
// src/app/comics/nietzsche-becoming/page.tsx
"use client";

import { ComicViewer } from "@/components/comic/ComicViewer";
import { ComicQuote } from "@/components/comic/ComicQuote";

export default function NietzscheBecomingPage() {
  // Comic content configuration
  const pages = [
    {
      pageNumber: 1,
      title: "The Question of Authenticity",
      panels: [
        // Panel 1: Opening quote from Bettcher
        <div key="1-1" className="relative aspect-square">
          <div className="absolute inset-0 bg-gradient-to-r from-blue-100 to-purple-100" />
          <ComicQuote
            text="We trans people live an 'everyday' shot through with perplexity, shot through with WTF questions."
            author="Talia Mae Bettcher"
            work="What is Trans Philosophy?"
          />
        </div>,

        // Panel 2: Confucius quote for contrast
        <div key="1-2" className="relative aspect-square">
          <div className="absolute inset-0 bg-gradient-to-r from-green-100 to-blue-100" />
          <ComicQuote
            text="At fifteen I set my heart on learning; at thirty I took my stand..."
            author="Confucius"
            work="The Analects"
          />
        </div>,
      ],
    },
    // Additional pages would be added here following the same structure
  ];

  return (
    <div className="max-w-4xl mx-auto px-4 py-8">
      <div className="mb-8">
        <h1 className="text-3xl font-bold mb-2">
          Becoming Who You Are: A Journey Through Self-Overcoming
        </h1>
        <p className="text-gray-600">
          A philosophical exploration through Nietzsche and (maybe, if I update
          this after submitting) other great thinkers
        </p>
      </div>

      <ComicViewer pages={pages} />

      {/* References Section */}
      <div className="mt-12">
        <h2 className="text-2xl font-bold mb-4">References</h2>
        <div className="space-y-2 text-gray-600">
          <p>Bettcher, T. M. (2019). What is Trans Philosophy?</p>
          <p>Confucius. (2003). The Analects.</p>
          {/* Add other references as needed */}
        </div>
      </div>
    </div>
  );
}

================
File: src/app/comics/page.tsx
================
// src/app/comics/page.tsx
export default function ComicsPage() {
  return (
    <div className="max-w-4xl mx-auto px-4 py-8">
      <h1 className="text-2xl font-bold mb-6">Comics</h1>
      {/* Comics list will go here */}
    </div>
  );
}

================
File: src/app/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
}

================
File: src/app/layout.tsx
================
// src/app/comics/layout.tsx
import type { Metadata } from "next";
import localFont from "next/font/local";
import RootLayout from "@/components/shared/Layout";
import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});

const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Philosophia",
  description: "Exploring philosophical concepts through visual storytelling in comic-strip form.",
};

export default function Layout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <RootLayout>{children}</RootLayout>
      </body>
    </html>
  );
}

================
File: src/app/not-found.tsx
================
// src/app/not-found.tsx
import Link from "next/link";

export default function NotFound() {
  return (
    <div className="fixed inset-0 flex flex-col items-center justify-center">
      <h2 className="text-2xl font-bold mb-4">404 - Page Not Found</h2>
      <p className="mb-4">Could not find the requested page or Philosopher</p>
      <Link href="/" className="text-blue-500 hover:text-blue-600">
        Return Home
      </Link>
    </div>
  );
}

================
File: src/app/page.tsx
================
"use client";

const HomePage = () => {
  return null;
};

export default HomePage;

================
File: src/components/comic/ComicLayout.tsx
================
export function ComicsLayout({ children }: { children: React.ReactNode }) {
  return <div className="min-h-screen">{children}</div>;
}

================
File: src/components/comic/ComicPage.tsx
================
// src/components/comic/ComicPage.tsx
import { ComicPanel } from "./ComicPanel";

interface ComicPageProps {
  pageNumber: number;
  title: string;
  panels: React.ReactNode[];
}

export function ComicPage({ pageNumber, title, panels }: ComicPageProps) {
  return (
    <div className="space-y-4">
      <h2 className="text-xl font-semibold">
        Page {pageNumber}: {title}
      </h2>
      <div className="grid grid-cols-2 gap-4">
        {panels.map((panel, index) => (
          <ComicPanel key={index} delay={index * 0.2}>
            {panel}
          </ComicPanel>
        ))}
      </div>
    </div>
  );
}

================
File: src/components/comic/ComicPanel.tsx
================
// src/components/comic/ComicPanel.tsx
import { cn } from "@/lib/utils";
import React, { HTMLAttributes } from "react";

interface ComicPanelProps extends HTMLAttributes<HTMLDivElement> {
  children: React.ReactNode;
  className?: string;
  delay?: number;
}

const ComicPanel = React.forwardRef<HTMLDivElement, ComicPanelProps>(
  ({ children, className = "", delay = 0, ...rest }, ref) => {
    // Reference delay here to prevent the ESLint warning
    console.log(delay);

    return (
      <div
        ref={ref}
        {...rest}
        className={cn(
          "border border-gray-200 rounded-lg shadow-lg overflow-hidden",
          className
        )}
      >
        {children}
      </div>
    );
  }
);

// Adding displayName for better debugging
ComicPanel.displayName = "ComicPanel";

export { ComicPanel };

================
File: src/components/comic/ComicQuote.tsx
================
// src/components/comic/ComicQuote.tsx
interface ComicQuoteProps {
  text: string;
  author: string;
  work: string;
}

export function ComicQuote({ text, author, work }: ComicQuoteProps) {
  return (
    <blockquote className="italic bg-gray-50 p-4 rounded-lg">
      <p className="mb-2">{text}</p>
      <footer className="text-sm text-gray-600">
        —{author}, <cite>{work}</cite>
      </footer>
    </blockquote>
  );
}

================
File: src/components/comic/ComicViewer.tsx
================
// src/components/comic/ComicViewer.tsx
"use client";

import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { ChevronLeft, ChevronRight } from "lucide-react";
import { ComicPage } from "./ComicPage";

interface ComicViewerProps {
  pages: {
    pageNumber: number;
    title: string;
    panels: React.ReactNode[];
  }[];
}

export function ComicViewer({ pages }: ComicViewerProps) {
  const [currentPage, setCurrentPage] = useState(0);

  const nextPage = () => {
    if (currentPage < pages.length - 1) {
      setCurrentPage((c) => c + 1);
    }
  };

  const prevPage = () => {
    if (currentPage > 0) {
      setCurrentPage((c) => c - 1);
    }
  };

  return (
    <div className="relative">
      <AnimatePresence mode="wait">
        <motion.div
          key={currentPage}
          initial={{ opacity: 0, x: 100 }}
          animate={{ opacity: 1, x: 0 }}
          exit={{ opacity: 0, x: -100 }}
          transition={{ duration: 0.3 }}
        >
          <ComicPage {...pages[currentPage]} />
        </motion.div>
      </AnimatePresence>

      <div className="absolute inset-y-0 left-0 right-0 flex items-center justify-between">
        <button
          onClick={prevPage}
          disabled={currentPage === 0}
          className="p-2 rounded-full bg-white/80 shadow-lg disabled:opacity-50"
        >
          <ChevronLeft className="w-6 h-6" />
        </button>
        <button
          onClick={nextPage}
          disabled={currentPage === pages.length - 1}
          className="p-2 rounded-full bg-white/80 shadow-lg disabled:opacity-50"
        >
          <ChevronRight className="w-6 h-6" />
        </button>
      </div>

      <div className="mt-4 flex justify-center">
        <p className="text-sm text-gray-600">
          Page {currentPage + 1} of {pages.length}
        </p>
      </div>
    </div>
  );
}

================
File: src/components/shared/ComicLayout.tsx
================
import React from "react";
import Link from "next/link";
import Image from "next/image";

const ComicLayout = () => {
  return (
    <div className="max-w-7xl mx-auto px-4 py-8">
      {/* Header / Nav */}
      <nav className="flex justify-between items-center mb-16">
        <div className="flex items-center gap-2">
          <div className="relative w-8 h-8">
            <Image
              src="/images/logo.png"
              alt="Logo"
              fill
              className="object-contain"
            />
          </div>
          <span className="text-lg font-medium">Philosophia</span>
        </div>
        <div className="flex items-center gap-6">
          <Link href="/comics" className="text-gray-600 hover:text-gray-900">
            Comics
          </Link>
          <Link
            href="/characters"
            className="text-gray-600 hover:text-gray-900"
          >
            Characters
          </Link>
          <Link href="/artist" className="text-gray-600 hover:text-gray-900">
            Artist
          </Link>
        </div>
      </nav>

      {/* Main Content Area */}
      <div className="flex">
        {/* Left Sidebar Profile */}
        <aside className="w-64 pr-8">
          <div className="flex flex-col items-center">
            {/* Profile Image */}
            <div className="relative w-32 h-32 mb-4">
              <Image
                src="/images/headshot.jpeg"
                alt="Cameron Curtis"
                fill
                className="rounded-full object-cover"
              />
            </div>

            {/* Profile Info */}
            <h2 className="text-xl font-bold mb-2">Cameron Curtis</h2>
            <p className="text-gray-600 text-sm mb-4">
              Philosophy Student, Comic Creator
            </p>
            <p className="text-gray-600 text-sm mb-4">
              Comp-Sci Transfer Pathway
            </p>

            {/* Location & Links */}
            <div className="text-gray-600 text-sm space-y-2 text-center">
              <p>Elk River, MN</p>
              <Link
                href="mailto:cameron@aerviz.co"
                className="block hover:text-blue-500"
              >
                Email
              </Link>
              <Link
                href="https://twitter.com/OptimumMeans"
                className="block hover:text-blue-500"
              >
                Twitter
              </Link>
            </div>
          </div>
        </aside>

        {/* Main Content */}
        <main className="flex-1">
          <h2 className="text-gray-800 text-xl font-semibold mb-6">
            Recent comics
          </h2>

          {/* Comic Entry */}
          <div className="space-y-6">
            <div className="comic-entry">
              <Link
                href="/comics/nietzsche-becoming"
                className="text-blue-500 hover:text-blue-700 text-lg block mb-2"
              >
                Becoming Who You Are: A Journey Through Self-Overcoming
              </Link>
              <p className="text-gray-600">
                Explore Nietzsche&apos;s philosophy of self-overcoming through
                ancient wisdom, modern struggles, and timeless truths
              </p>
            </div>
          </div>
        </main>
      </div>
    </div>
  );
};

export default ComicLayout;

================
File: src/components/shared/Layout.tsx
================
// src/components/shared/Layout.tsx
"use client";
import React from "react";
import ComicLayout from "./ComicLayout";
import { usePathname } from "next/navigation";

const RootLayout = ({ children }: { children: React.ReactNode }) => {
  const pathname = usePathname();
  const is404 = pathname === "/404" || pathname === "/not-found";

  if (is404) {
    return <div className="relative min-h-screen">{children}</div>;
  }

  return (
    <div className="min-h-screen">
      <ComicLayout />
      {children}
    </div>
  );
};

export default RootLayout;

================
File: src/components/ui/card.tsx
================
import * as React from "react";
import { cn } from "@/lib/utils";

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-lg border bg-card text-card-foreground shadow-sm",
      className
    )}
    {...props}
  />
));
Card.displayName = "Card";

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-1.5 p-6", className)}
    {...props}
  />
));
CardHeader.displayName = "CardHeader";

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
));
CardContent.displayName = "CardContent";

export { Card, CardHeader, CardContent };

================
File: src/lib/utils.ts
================
import { type ClassValue, clsx } from "clsx";
import { twMerge } from "tailwind-merge";

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

================
File: tailwind.config.ts
================
import type { Config } from "tailwindcss";

const config: Config = {
  darkMode: ["class"],
  content: [
    "./pages/**/*.{ts,tsx}",
    "./components/**/*.{ts,tsx}",
    "./app/**/*.{ts,tsx}",
    "./src/**/*.{ts,tsx}",
  ],
  prefix: "",
  theme: {
    container: {
      center: true,
      padding: "2rem",
      screens: {
        "2xl": "1400px",
      },
    },
    extend: {
      keyframes: {
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
  },
  plugins: [require("tailwindcss-animate")],
};

export default config;

================
File: tsconfig.json
================
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
